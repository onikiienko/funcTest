{
  "name": "flat",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "node_modules/.bin/mocha -u tdd --reporter spec"
  },
  "license": "BSD",
  "description": "Take a nested Javascript object and flatten it, or unflatten an object with delimited keys",
  "devDependencies": {
    "mocha": "~1.6.0"
  },
  "directories": {
    "test": "test"
  },
  "dependencies": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/flat.git"
  },
  "keywords": [
    "flat",
    "json",
    "flatten",
    "unflatten",
    "split",
    "object",
    "nested"
  ],
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com"
  },
  "readme": "# flat [![Build Status](https://secure.travis-ci.org/hughsk/flat.png?branch=master)](http://travis-ci.org/hughsk/flat)\n\nTake a nested Javascript object and flatten it, or unflatten an object with\ndelimited keys.\n\n## Installion\n\n``` bash\n$ npm install flat\n```\n\n## Methods\n\n### flat.flatten(original, options)\n\nFlattens the object - it'll return an object one level deep, regardless of how\nnested the original object was:\n\n``` javascript\nvar flatten = require('flat').flatten\n\nflatten({\n    key1: {\n        keyA: 'valueI'\n    },\n    key2: {\n        keyB: 'valueII'\n    },\n    key3: { a: { b: { c: 2 } } }\n})\n\n// {\n//   'key1.keyA': 'valueI',\n//   'key2.keyB': 'valueII',\n//   'key3.a.b.c': 2\n// }\n```\n\n### flat.flatten(original, options)\n\nFlattening is reversible too, you can call `flat.unflatten()` on an object:\n\n``` javascript\nvar unflatten = require('flat').unflatten\n\nunflatten({\n    'three.levels.deep': 42,\n    'three.levels': {\n        nested: true\n    }\n})\n\n// {\n//     three: {\n//         levels: {\n//             deep: 42,\n//             nested: true\n//         }\n//     }\n// }\n```\n\n## Options\n\n### delimiter\n\nUse a custom delimiter for (un)flattening your objects, instead of `.`.\n\n### safe\n\nWhen enabled, both `flat` and `unflatten` will preserve arrays and their\ncontents. This is disabled by default.\n\n``` javascript\nvar flatten = require('flat').flatten\n\nflatten({\n    this: [\n        { contains: 'arrays' },\n        { preserving: {\n              them: 'for you'\n        }}\n    ]\n}, {\n    safe: true\n})\n\n// {\n//     'this': [\n//         { contains: 'arrays' },\n//         { preserving: {\n//             them: 'for you'\n//         }}\n//     ]\n// }\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hughsk/flat/issues"
  },
  "homepage": "https://github.com/hughsk/flat",
  "_id": "flat@1.0.0",
  "dist": {
    "shasum": "01dfdd5bcbc149c66b35ed401e1d753f1aad8d59"
  },
  "_from": "flat@~1.0.0",
  "_resolved": "https://registry.npmjs.org/flat/-/flat-1.0.0.tgz"
}
