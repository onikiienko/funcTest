{
  "name": "grunt-replace",
  "description": "Replace text patterns with a given string.",
  "version": "0.5.1",
  "homepage": "http://github.com/outaTiME/grunt-replace",
  "author": {
    "name": "outaTiME",
    "url": "http://outa.im/"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/outaTiME/grunt-replace.git"
  },
  "bugs": {
    "url": "http://github.com/outaTiME/grunt-replace/issues"
  },
  "licenses": [
    {
      "type": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "flat": "~1.0.0"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.2",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-internal": "~0.4.5",
    "grunt": "~0.4.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "replace",
    "text",
    "patterns",
    "string",
    "regex",
    "json"
  ],
  "readme": "# grunt-replace [![Build Status](https://secure.travis-ci.org/outaTiME/grunt-replace.png?branch=master)](http://travis-ci.org/outaTiME/grunt-replace)\n\n> Replace text patterns with a given string.\n\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-replace --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-replace');\n```\n\n*This plugin was designed to work with Grunt 0.4.x. If you're still using grunt v0.3.x it's strongly recommended that [you upgrade](http://gruntjs.com/upgrading-from-0.3-to-0.4), but in case you can't please use [v0.3.2](https://github.com/outaTiME/grunt-replace/tree/grunt-0.3-stable).*\n\n\n\n## Replace task\n_Run this task with the `grunt replace` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n### Options\n\n#### patterns\nType: `Array`\n\nDefine patterns that will be used to replace the contents of source files, replacement order will be the same as defined in the `Array`.\n\n#### patterns.match\nType: `String|RegExp`\n\nIndicates the matching expression.\n\nIf matching type is `String` and `expression` attribute is `false` we use a simple variable lookup mechanism `@@string` (in any other case we uses the default regexp replace logic):\n\n```javascript\noptions: {\n  patterns: [\n    {\n      match: 'foo',\n      replacement: 'bar', // replaces \"@@foo\" to \"bar\"\n      expression: false   // simple variable lookup\n    }\n  ]\n}\n```\n\nTemplated regexps are allowed, `match` attribure must be quoted and `expression` attribute should be in `true`:\n\n```javascript\noptions: {\n  patterns: [\n    {\n      match: '/<%= grunt.template.today(\"yyyy\") %>/g',\n      replacement: '2014', // replaces \"2013\" to \"2014\"\n      expression: true     // must be forced for templated regexp\n    }\n  ]\n}\n```\n\n#### patterns.replacement\nType: `String|Function`\n\nIndicates the replacement for match, for more information about replacement checkout [String.replace](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace).\n\nYou can specify a function as replacement. In this case, the function will be invoked after the match has been performed. The function's result (return value) will be used as the replacement string.\n\n```javascript\noptions: {\n  patterns: [\n    {\n      match: /foo/g,\n      replacement: function () {\n        return 'bar'; // replaces \"foo\" to \"bar\"\n      }\n    }\n  ]\n}\n```\n\n#### patterns.json\nType: `Object`\n\nIf an attribute `json` found in pattern definition we flatten the object using [Flat dependency](https://github.com/hughsk/flat) and each key–value pair will be used for the replacement (simple variable lookup mechanism and no regexp support).\n\n```javascript\noptions: {\n  patterns: [\n    {\n      json: {\n        \"key\": \"value\" // replaces \"@@key\" to \"value\"\n      }\n    }\n  ]\n}\n```\n\nAlso supports nested objects and templating:\n\n```javascript\noptions: {\n  patterns: [\n    {\n      json: {\n        \"key\": \"value\",                     // replaces \"@@key\" to \"value\"\n        \"inner\": {\n          \"key\": \"value\"                    // replaces \"@@inner.key\" to \"value\"\n        },\n        \"templated_<%= \\\"key\\\" %>\": \"value\" // replaces \"@@templated_key\" to \"value\"\n      }\n    }\n  ]\n}\n```\n\nAlternatively, you can specify a external file:\n\n```javascript\noptions: {\n  patterns: [\n    {\n      json: grunt.file.readJSON('config.json')\n    }\n  ]\n}\n```\n\n#### patterns.expression\nType: `Boolean`\nDefault: `false`\n\nIndicates the type of matching (for templated regexp match we need to force in `true`).\n\nIf detects regexp instance in `match` attribute we assume to works with expression matcher (in any other case should be forced).\n\n#### variables\nType: `Object`\n\nThis is the old way to define patterns using plain object (simple variable lookup mechanism and no regexp support), you can still using but for more control you should use the new `patterns` way.\n\n```javascript\noptions: {\n  variables: {\n    'key': 'value' // replaces \"@@key\" to \"value\"\n  }\n}\n```\n\n#### prefix\nType: `String`\nDefault: `@@`\n\nThis prefix is used to create an replacement pattern for simple variable lookup mechanism.\n\n#### force\nType: `Boolean`\nDefault: `false`\n\nForce the copy of files even when those files don't have any match found for replacement.\n\n#### mode\nType: `Number`\nDefault: `0666`\n\nSets the file mode (permission and sticky bits).\n\n### Usage Examples\n\n#### Short\n\nFile `build/manifest.appcache`:\n\n```\nCACHE MANIFEST\n# @@timestamp\n\nCACHE:\n\nfavicon.ico\nindex.html\n\nNETWORK:\n*\n```\n\nGruntfile, define pattern (for timestamp) and the source files for lookup:\n\n```js\nreplace: {\n  dist: {\n    options: {\n      patterns: [\n        {\n          match: 'timestamp',\n          replacement: '<%= grunt.template.today() %>'\n        }\n      ]\n    },\n    files: [\n      {expand: true, flatten: true, src: ['build/manifest.appcache'], dest: 'public/'}\n    ]\n  }\n}\n```\n\n#### Multiple matching\n\nFile `build/manifest.appcache`:\n\n```\nCACHE MANIFEST\n# @@timestamp\n\nCACHE:\n\nfavicon.ico\nindex.html\n\nNETWORK:\n*\n```\n\n\nFile `build/humans.txt`:\n\n```\n              __     _\n   _    _/__  /./|,//_`\n  /_//_// /_|///  //_, outaTiME v.@@version\n\n/* TEAM */\n  Web Developer / Graphic Designer: Ariel Oscar Falduto\n  Site: http://www.outa.im\n  Twitter: @outa7iME\n  Contact: afalduto at gmail dot com\n  From: Buenos Aires, Argentina\n\n/* SITE */\n  Last update: @@timestamp\n  Standards: HTML5, CSS3, robotstxt.org, humanstxt.org\n  Components: H5BP, Modernizr, jQuery, Twitter Bootstrap, LESS, Jade, Grunt\n  Software: Sublime Text 2, Photoshop, LiveReload\n\n```\n\nGruntfile:\n\n```js\nreplace: {\n  dist: {\n    options: {\n      patterns: [\n        {\n          match: 'version',\n          replacement: '<%= pkg.version %>'\n        },\n        {\n          match: 'timestamp',\n          replacement: '<%= grunt.template.today() %>'\n        }\n      ]\n    },\n    files: [\n      {expand: true, flatten: true, src: ['build/manifest.appcache', 'build/humans.txt'], dest: 'public/'}\n    ]\n  }\n}\n```\n\n#### Cache busting\n\nFile `app/assets/index.html`:\n\n```html\n<head>\n  <link rel=\"stylesheet\" href=\"/css/style.css?rel=@@timestamp\">\n  <script src=\"/js/app.js?rel=@@timestamp\"></script>\n</head>\n```\n\nGruntfile:\n\n```js\nreplace: {\n  dist: {\n    options: {\n      patterns: [\n        {\n          match: 'timestamp',\n          replacement: '<%= new Date().getTime() %>'\n        }\n      ]\n    },\n    files: [\n      {src: ['app/assets/index.html'], dest: 'build/index.html'}\n    ]\n  }\n}\n```\n\n#### Include file\n\nFile `build/index.html`:\n\n```html\n<body>\n  @@include\n</body>\n```\n\nGruntfile:\n\n```js\nreplace: {\n  dist: {\n    options: {\n      patterns: [\n        {\n          match: 'include',\n          replacement: '<%= grunt.file.read(\"includes/content.html\") %>'\n        }\n      ]\n    },\n    files: [\n      {expand: true, flatten: true, src: ['build/index.html'], dest: 'public/'}\n    ]\n  }\n}\n```\n\n#### Regular expression\n\nFile `build/username.txt`:\n\n```\nJohn Smith\n```\n\nGruntfile:\n\n```js\nreplace: {\n  dist: {\n    options: {\n      patterns: [\n        {\n          match: /(\\w+)\\s(\\w+)/,\n          replacement: '$2, $1', // replaces \"John Smith\" to \"Smith, John\"\n          expression: true\n        }\n      ]\n    },\n    files: [\n      {expand: true, flatten: true, src: ['build/username.txt'], dest: 'public/'}\n    ]\n  }\n}\n```\n\n## Release History\n\n * 2013-09-18   v0.5.1   New pattern matchig for JSON object.\n * 2013-09-17   v0.5.0   Regular expression matching now supported and notation has been updated but is backward compatible.\n * 2013-05-03   v0.4.4   Fix escape $ before performing regexp replace (thanks @warpech).\n * 2013-04-14   v0.4.3   Detect path destinations correctly on Windows.\n * 2013-04-02   v0.4.2   Add peerDependencies and update description.\n * 2013-04-02   v0.4.1   Add trace when force flag.\n * 2013-02-28   v0.4.0   First official release for Grunt 0.4.0.\n * 2012-11-20   v0.3.2   New examples added.\n * 2012-09-25   v0.3.1   Rename grunt-contrib-lib dep to grunt-lib-contrib, add force flag.\n * 2012-09-25   v0.3.0   General cleanup and consolidation. Global options depreciated.\n\n---\n\nTask submitted by [Ariel Falduto](http://outa.im/)\n",
  "readmeFilename": "README.md",
  "_id": "grunt-replace@0.5.1",
  "dist": {
    "shasum": "d1422a6db0eac36b25908185709f00728c9c90cf"
  },
  "_from": "grunt-replace@",
  "_resolved": "https://registry.npmjs.org/grunt-replace/-/grunt-replace-0.5.1.tgz"
}
